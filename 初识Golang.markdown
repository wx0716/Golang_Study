[TOC]

### 1.Golang语言简介

Golang语言起源于2017年，并在2019年正式对外发布。Golang的主要目标是“兼具Python等动态语言的开发速度和C/C++等编译型语言的性能和安全性“。

Golang语言是编程语言设计的又一次尝试，是对类C语言的重大改进，它不但能让你访问底层操作系统，还提供了强大的网络编程和并发编程支持。Golang语言的用途众多，可以进行网络编程、系统编程、并发编程、分布式编程。

Golang语言的推出，旨在不损失应用程序性能的情况下降低代码的复杂性，具有“部署简单、并发性好、语言设计良好、执行性能好”等优势。

Golang语言有时候被描述为“C类语言”。Golang从C语言继承了相似的表达式语法、控制流结构、基础数据类型、调用参数传值、指针等很多思想，还有C语言一直所看中的编译后机器码的运行效率和现有操作系统的无缝适配。

Golang语言没有类和继承的概念，Golang可以通过接口(interface)的概念来实现多态性。

### 2.Golang语言是编译型语言

Golang使用编译器来编译代码。编译器将源代码编译成二进制(或字节码)
格式；在编译代码时，编译器检查错误、优化性能并输出可在不同平台上运行的二进制文件。要创建并运行Golang程序，需执行以下程序步骤：

1. 使用文本编辑器创建Golang程序；
2. 保存文件；
3. 编译程序；
4. 运行编译得到的可执行文件；

这不同于Python、Ruby和JavaScript等语言，它们不包含编译步骤。Golang自带了编译器，因此无需单独安装编译器。

### 3.为什么要学习Golang语言

如果你要创建系统程序、或者基于网路的程序，Golang语言是很不错的选择。Golang语言支持交叉编译，比如说你可以在运行Linux系统的计算机上开发可以在Windows上运行的应用程序。这是一门完全支持UTF-8的编程语言，这不仅体现在它可以处理使用UTF-8的字符串，就连Golang的源文件格式都是使用的UTF-8的编码。

