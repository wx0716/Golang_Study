[TOC]

Golang语言是由Google公司开发的一种静态强类型、编译型、并发型、并具有垃圾回收功能的编程语言

### 语法简单

抛开语法样式不谈，单就类型和规则而言，Golang与C99、C11相似之处颇多，这也是Golang语言被冠以“NextC”名号的重要原因

Golang语言的语法处于简单和复杂的两极。C语言简单到你每写下一行代码，都能在脑海中想象出编译后的模样，指令如何执行、内存如何分配、等等。而C语言的复杂在于，它有太多隐晦而不着边际的规则，着实让人头疼。相比较而言，Golang从零开始，没有历史包袱，在汲取众多经验教训后，可从头规划一个规则严谨、条理简单的编程语言世界。

将“++”、“--”从运算符降级为语句，保留指针，但默认阻止指针运算，带来的好处是显而易见的。还有，将切片和字典作为内置类型，从运行时的层面进行优化，这也算是一种“简单”。

### 并发模型

Goroutine是Golang最显著的特征，它用类协程的方式来处理并发单元，却又在运行时层面做了更深度的优化处理。这使得语法上的并发编程变得极为容易，无需处理回调、无需关注线程切换，仅是一个关键字，简单而自然。

搭配channel，实现CSP模型。将并发单元间的数据耦合拆解开来，各司其职，这对所有纠结于内存共享、锁粒度的开发人员都是一个可期盼的解脱。若说有所不足，那就是应该有个更大的计划，将通信从进程内扩展到进程外，实现真正意义上的分布式。